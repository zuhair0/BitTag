https://youtu.be/n59n9M1vLm8
https://youtu.be/6joGkZMVX4o
https://www.youtube.com/watch?v=MTOHFCsgjls //qrcode

------------DAL----------------
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ClassLibraryModel;
namespace ClassLibraryDAL
{
    public class TourCompanyRegDAL
    {
        public static int SaveTourCompanyReg(TourCompanyRegModel tcrm)
        {
            SqlConnection con = DBHelper.GetConnection();
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_SaveTourCompanyReg", con);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@Tour_guide_id",tcrm.Tour_guide_id );
            cmd.Parameters.AddWithValue("@Company_name", tcrm.Company_name);
            cmd.Parameters.AddWithValue("@Company_sector", tcrm.Company_sector);
            cmd.Parameters.AddWithValue("@City_id", tcrm.City_id);
            cmd.Parameters.AddWithValue("@Company_longitude_latitude",tcrm.Company_longitude_latitude );
            cmd.Parameters.AddWithValue("@Company_website",tcrm.Company_website );
            cmd.Parameters.AddWithValue("@Company_Facebook", tcrm.Company_Facebook);
            cmd.Parameters.AddWithValue("@Company_Instagram", tcrm.Company_Instagram);
            cmd.Parameters.AddWithValue("@Company_contact1", tcrm.Company_contact1);
            cmd.Parameters.AddWithValue("@Company_contact2", tcrm.Company_contact2);
            cmd.Parameters.AddWithValue("@Company_Whatsapp", tcrm.Company_Whatsapp);
            cmd.Parameters.AddWithValue("@Company_Landline", tcrm.Company_Landline);
            cmd.Parameters.AddWithValue("@Tour_Company_Registration_date_time", tcrm.Tour_Company_Registration_date_time);
            int i = cmd.ExecuteNonQuery();
            con.Close();
            return i;
        }
        public static List<TourCompanyRegModel> GetTourCompanyRegistrations()
        {
            SqlConnection con = DBHelper.GetConnection();
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_GetTourCompanyReg", con);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            SqlDataReader reader = cmd.ExecuteReader();
            List<TourCompanyRegModel> tourCompaniesList = new List<TourCompanyRegModel>();
            while (reader.Read())
            {
                TourCompanyRegModel tourCompany = new TourCompanyRegModel();
                tourCompany.Company_ID = int.Parse(reader["Company_ID"].ToString());
                tourCompany.Tour_guide_id = int.Parse(reader["Tour_guide_id"].ToString());
                tourCompany.Company_name = reader["Company_name"].ToString();
                tourCompany.Company_sector = reader["Company_sector"].ToString();
                tourCompany.City_id = int.Parse(reader["City_id"].ToString());
                tourCompany.Company_longitude_latitude = int.Parse(reader["Company_longitude_latitude"].ToString());
                tourCompany.Company_website = reader["Company_website"].ToString();
                tourCompany.Company_Facebook = reader["Company_Facebook"].ToString();
                tourCompany.Company_Instagram = reader["Company_Instagram"].ToString();
                tourCompany.Company_contact1 = int.Parse(reader["Company_contact1"].ToString());
                tourCompany.Company_contact2 = int.Parse(reader["Company_contact2"].ToString());
                tourCompany.Company_Whatsapp = int.Parse(reader["Company_Whatsapp"].ToString());
                tourCompany.Company_Landline = int.Parse(reader["Company_Landline"].ToString());
                //tourCompany.Tour_Company_Registration_date_time = reader["Tour_Company_Registration_date_time"].ToString();
                tourCompaniesList.Add(tourCompany);
            }
            con.Close();
            return tourCompaniesList;
        }
        public static List<TourCompanyRegModel> GetTourCompanyRegistration(int id)
        {
            SqlConnection con = DBHelper.GetConnection();
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_GetCompanyByTourID", con);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@Tour_guide_id", id);
            SqlDataReader reader = cmd.ExecuteReader();
            List<TourCompanyRegModel> tourCompaniesList = new List<TourCompanyRegModel>();
            while (reader.Read())
            {
                TourCompanyRegModel tourCompany = new TourCompanyRegModel();
                tourCompany.Company_ID = int.Parse(reader["Company_ID"].ToString());
                tourCompany.Tour_guide_id = int.Parse(reader["Tour_guide_id"].ToString());
                tourCompany.Company_name = reader["Company_name"].ToString();
                tourCompany.Company_sector = reader["Company_sector"].ToString();
                tourCompany.City_id = int.Parse(reader["City_id"].ToString());
                tourCompany.Company_longitude_latitude = int.Parse(reader["Company_longitude_latitude"].ToString());
                tourCompany.Company_website = reader["Company_website"].ToString();
                tourCompany.Company_Facebook = reader["Company_Facebook"].ToString();
                tourCompany.Company_Instagram = reader["Company_Instagram"].ToString();
                tourCompany.Company_contact1 = int.Parse(reader["Company_contact1"].ToString());
                tourCompany.Company_contact2 = int.Parse(reader["Company_contact2"].ToString());
                tourCompany.Company_Whatsapp = int.Parse(reader["Company_Whatsapp"].ToString());
                tourCompany.Company_Landline = int.Parse(reader["Company_Landline"].ToString());
                //tourCompany.Tour_Company_Registration_date_time = reader["Tour_Company_Registration_date_time"].ToString();
                tourCompaniesList.Add(tourCompany);
            }
            con.Close();
            return tourCompaniesList;
        }
        public static int DeleteTourGuide(int Company_ID)
        {
            SqlConnection con = DBHelper.GetConnection();
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_DeleteTourCompany", con);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@Company_ID", Company_ID);
            int i = cmd.ExecuteNonQuery();
            con.Close();
            return i;
        }
    }
}



-----------RAZOR----------------------
@page "/tourcompanyreg/{TG_id}"
@using ClassLibraryModel
@using ClassLibraryDAL
<link rel="stylesheet" href="/css/style.css" />
<PageTitle>TourCompanyRegistration</PageTitle>
<div class="lngfrm">
    <EditForm Model="tourCompanyReg" OnSubmit="SaveTourCompanyReg">
        <div class="row">
            <label class="col-1">Name</label>
            <input class="col-2" type="text" @bind-value="tourCompanyReg.Company_name" /><br />
            <label class="col-1">Sector</label>
            <input class="col-2" type="text" @bind-value="tourCompanyReg.Company_sector" /><br />
            <label class="col-1">City</label>
            <select class="col-1" @onchange="selectedcity">

                @foreach (var item in cityList)
                {
                    <option value="@item.City_code">@item.City_name</option>
                }
            </select><br />
            <label class="col-1">Longitude Latitude</label>
            <input class="col-1" type="text" @bind-value="tourCompanyReg.Company_longitude_latitude" /><br />
        </div>
        
        <label>website</label>
        <input type="text" @bind-value="tourCompanyReg.Company_website" /><br />
        <label>facebook</label>
        <input type="text" @bind-value="tourCompanyReg.Company_Facebook" /><br />
        <label>instagram</label>
        <input type="text" @bind-value="tourCompanyReg.Company_Instagram" /><br />
        <label>contact1</label>
        <input type="text" @bind-value="tourCompanyReg.Company_contact1" /><br />
        <label>contact2</label>
        <input type="text" @bind-value="tourCompanyReg.Company_contact2" /><br />
        <label>Whatsapp</label>
        <input type="text" @bind-value="tourCompanyReg.Company_Whatsapp" /><br />
        <label>Landline</label>
        <input type="text" @bind-value="tourCompanyReg.Company_Landline" /><br />
        <label>Reg date/time</label>
        <input type="text" @bind-value="tourCompanyReg.Tour_Company_Registration_date_time" /><br />
        <button type="submit">Save</button>
    </EditForm>
</div>

<p>@msg</p>
<table class="tble table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Contact</th>
            <th>Sector</th>
        </tr>
    </thead>
    @foreach (var item in tourCompanyRegsList)
    {
        <tr>
            <td>@item.Company_name</td>
            <td>@item.Company_contact1</td>
            <td>@item.Company_sector</td>
            <td>
                <button @onclick="(()=>DeleteTourCompany(item.Company_ID))">Delete</button>
            </td>
            <td>
                <a href="companymemberreg/@item.Company_ID">Add company member</a>
            </td>
            <td>
                <a href="tourcompanyservice/@item.Company_ID">Service</a>
            </td>
            <td>
                <a href="companyportfolio/@item.Company_ID">Company portfolio</a>
            </td>
            <td>
                <a href="tourpackage/@item.Company_ID">Tour Package</a>
            </td>
        </tr>
    }
</table>
@code {
    [Parameter]
    public string? TG_id { get; set; }
    private string? msg { get; set; }
    private int citycode { get; set; }
    private TourCompanyRegModel tourCompanyReg=new TourCompanyRegModel();
    private List<TourCompanyRegModel> tourCompanyRegsList = new List<TourCompanyRegModel>();
    private List<TourismModel> cityList = new List<TourismModel>();
    private void SaveTourCompanyReg(){
        tourCompanyReg.City_id = citycode;
        tourCompanyReg.Tour_guide_id = int.Parse(TG_id);
        int i = TourCompanyRegDAL.SaveTourCompanyReg(tourCompanyReg);
        if(i==1){
            msg = "Saved succesfully";
            GetTourCompanyReg();
        }
        else{
            msg = "Error while saving";
        }
    }
    protected override void OnInitialized()
    {
        GetTourCompanyReg();
        Loadcity();
    }
    private void GetTourCompanyReg()
    {
        tourCompanyRegsList = TourCompanyRegDAL.GetTourCompanyRegistration(int.Parse(TG_id));

    }
    private void DeleteTourCompany(int id){
        int i = TourCompanyRegDAL.DeleteTourGuide(id);
        if (i == 1)
        {
            msg = "deleted succesfully";
            GetTourCompanyReg();
        }
        else
        {
            msg = "Error while deleting";
        }
    }
    private void Loadcity(){
        cityList = TourismDAL.GetCities();
    }
    private void selectedcity(ChangeEventArgs e ){
        citycode = int.Parse(e.Value.ToString());
    }
}


==========DROPDROWN CODE======
<label>Category</label>
    <select @onchange="SelectedCategoryID">
        @foreach (var item in serviceCategoriesList)
        {
            <option value="@item.Cat_ID">@item.Cat_Title</option>
        }
    </select>@servicecategory<br />

private void SelectedCategoryID(ChangeEventArgs e){
        servicecategory = int.Parse(e.Value.ToString());
    }