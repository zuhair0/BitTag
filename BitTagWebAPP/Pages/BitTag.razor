@page "/bittag"
@using BitTagDAL
@using BitTagModels
@inject IBitTag bittag
@using BitTagUser.CutomerServices;
@using Syncfusion.Blazor.BarcodeGenerator
<PageTitle>Generate a BitTag</PageTitle>

<div style="display:flex;justify-content:center; flex-direction:column; background:lightblue; padding-left:30%;">
	
	@if (bitTagDetails.qRcode != null && bitTagDetails.qRcode.Trim() != "")
	{
		<SfQRCodeGenerator Width="500px" Height="500px" Value="@items">
			<QRCodeGeneratorDisplayText Visibility="false"></QRCodeGeneratorDisplayText>
		</SfQRCodeGenerator>
	}
	<EditForm Model="bitTagDetails" OnSubmit="Save">
		@* <label>Generate</label>
		<input type="text" @bind-value="bitTagDetails.QRcode"/>  *@

		<center class="mt-5 mb-5 mr-36">
			<button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Generate a BitTag</button>
		</center>
	</EditForm>
</div>
@code {
	BitTagDetailsModel bitTagDetails=new BitTagDetailsModel();
	List<BitTagDetailsModel> bittags = new List<BitTagDetailsModel>();
	string items;
	Random rnd = new Random();
	int serialCounter = 0;
	string userid = "3fa85f64-5717-4562-b3fc-2c963f66afad";
	//24372788
	private async void Save()
	{
		serialCounter++;
		bitTagDetails.orgId = Guid.Parse(userid);
		//bitTagDetails.QRcode = $"{bitTagDetails.orgId} - {bitTagDetails.QRcode} - {bitTagDetails.tagID}"; // Concatenate desired properties
		items = $"{bittags[0].vehiclePlate}-{bittags[0].vehicleMake}-{bittags[0].vehicleModel}-{bittags[0].vehicleColor}-{bittags[0].vehicleType}";
		bitTagDetails.qRcode = rnd.Next(10000000,99999999).ToString();
		//bitTagDetails.QRcode = "https://ironsoftware.com/csharp/barcode/tutorials/csharp-qr-code-generator/";
		bitTagDetails.tagID = Guid.NewGuid();
		//bitTagDetails.tagSerial = serialCounter.ToString();
		await bittag.SaveBitTags(bitTagDetails);
	}
	protected override async Task OnInitializedAsync()
	{
		bittags = await bittag.GetBitTByID("24372788");
	}
	protected void GenerateClick()
	{
		
	}
}
