@page "/index/{custCNIC}"

@using BitTagModels
@using BitTagDAL
@using BitTagUser.CutomerServices
@inject ICustomer cust;
@inject IOrgs org;
@inject IVehicle veh;
@inject ICustomerWorkInfo custWork;
@inject IJSRuntime js;
@using BitTagUser.Authentication
@using BitTagUser.Pages
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@* @inject AuthenticationState AuthenticationState
@inject AuthenticationStateProvider AuthenticationStateProvider; *@
<PageTitle>Profile | BitTag</PageTitle>
<CascadingAuthenticationState>
    <AuthorizeView>

        <div class="p-4 sm:ml-64">
            <div class="rounded-xl border border-gray-700 soft-color text-gray-900 p-4">
                <div class="flex items-center gap-4">

                    @foreach(var item in customersList)
                    {
                        <div>
                            <h3 class="text-4xl font-bold text-gray-900">@item.firstName @item.lastName</h3>

                            <div class="flow-root">
                                <ul class="-m-1 flex flex-wrap text-xl">
                                    <li class="p-1 leading-none">
                                        <p class="text-xs font-medium text-gray-700 text-xl"> @item.custCNIC |</p>
                                    </li>

                                    <li class="p-1 leading-none">
                                        <p class="text-xs font-medium text-gray-700 text-xl"> @item.contact |</p>
                                    </li>

                                    <li class="p-1 leading-none">
                                        <p class="text-xs font-medium text-gray-700 text-xl">@item.custEmail</p>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }

                </div>

                <ul class="mt-4 space-y-2">
 

                    <li>
                        <div class="block h-full rounded-lg border border-gray-700 p-4 hover:main-color">
                            <strong class="font-bold text-gray-900 text-xl">Vehicle Information</strong><hr class="mt-5 mb-5" />
                            @foreach (var item in vehicleList)
                            {

                                <div class="flow-root rounded-lg border border-gray-100 py-3 shadow-sm mx-5 md:m-0" style="width: 90%; ">
                                    <dl class="-my-3 divide-y divide-gray-100 text-lg">
                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Make</dt>
                                            <dd class="text-gray-700 sm:col-span-2">@item.vehicleMake</dd>
                                        </div>

                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Model</dt>
                                            <dd class="text-gray-700 sm:col-span-2">@item.vehicleModel</dd>
                                        </div>

                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Color</dt>
                                            <dd class="text-gray-700 sm:col-span-2">@item.vehicleColor</dd>
                                        </div>

                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Vehicle Plate</dt>
                                            <dd class="text-gray-700 sm:col-span-2">@item.vehiclePlate</dd>
                                        </div>

                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Vehicle Type</dt>
                                            <dd class="text-gray-700 sm:col-span-2">@item.vehicleType</dd>
                                        </div>

                                        <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                            <dt class="font-medium text-gray-900">Action</dt>
                                            <dd class="text-gray-700 sm:col-span-2">
                                                <span class="inline-flex overflow-hidden rounded-md border bg-white shadow-sm">
                                                    <button class="inline-block p-3 text-white bg-red-500 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50"
                                                            title="Delete Product" @onclick="()=>DeleteVehicle(item.vehicleID)">
                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                             fill="none"
                                                             viewBox="0 0 24 24"
                                                             stroke-width="1.5"
                                                             stroke="currentColor"
                                                             class="h-6 w-6">
                                                            <path stroke-linecap="round"
                                                                  stroke-linejoin="round"
                                                                  d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                                                        </svg>
                                                    </button>
                                                </span>
                                            </dd>
                                        </div>
                                    </dl>
                                </div>
                                <hr class="mt-5 mb-5" />
                            }

                        </div>
                    </li>
                    <li>
                        <div class="block h-full rounded-lg border border-gray-700 p-4 hover:main-color">
                            <strong class="font-bold text-gray-900 text-xl">Work Information</strong><hr class="mt-5 mb-5" />
                            @foreach (var item in workinfos)
                                {
                                    <div class="flow-root rounded-lg border border-gray-100 py-3 shadow-sm mx-5 md:m-0" style="width: 90%; ">
                                        <dl class="-my-3 divide-y divide-gray-100 text-lg">
                                            <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">


                                                <dt class="font-medium text-gray-900">Organization</dt>
                                                <dd class="text-gray-700 sm:col-span-2">@organizations[i].orgName</dd>


                                            </div>

                                            <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                                <dt class="font-medium text-gray-900">WorkType</dt>
                                                <dd class="text-gray-700 sm:col-span-2">@item.WorkType</dd>
                                            </div>

                                            <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                                <dt class="font-medium text-gray-900">Designation</dt>
                                                <dd class="text-gray-700 sm:col-span-2">@item.Desig</dd>
                                            </div>

                                            <div class="grid grid-cols-1 gap-1 p-3 even:bg-blue-100 sm:grid-cols-3 sm:gap-4">
                                                <dt class="font-medium text-gray-900">Frequent Check-in Time</dt>
                                                <dd class="text-gray-700 sm:col-span-2">@item.worktime</dd>
                                            </div>

                                        </dl>

                                    </div>
                                    <hr class="mt-5 mb-5" />


                                    i++;

                                }

                        </div>
                    </li>
                </ul>
            </div>
        </div>

    </AuthorizeView>
</CascadingAuthenticationState>

@* @if(customersList != null && workinfos != null && vehicleList != null)
{ *@
@* <CascadingAuthenticationState>
<AuthorizeView>
    <Authorized> *@

@* } *@

@* else
{ *@
<div style="display: flex; justify-content: center; text-align: center; color:white; font-weight: bold; padding-top: 300px;">
    <p><em>Please fill out your profile</em></p>
</div>
@*  </Authorized>
    <NotAuthorized>
        <h1>Hello Guest</h1>
    </NotAuthorized>
   </AuthorizeView>
</CascadingAuthenticationState> *@
<!--}-->
@code {
    [Parameter]
    public string? custCNIC { get; set; }
    // [CascadingParameter]
    // private Task<AuthenticationState> context { get; set; }
    // private async Task DisplayGreetingAlert()
    // {
    //     var authState = await authenticationState;
    //     var message = $"Hello {authState.User.Identity.Name}";
    //     await js.InvokeVoidAsync("alert", message);
    // }

    List<CustomersModel> customersList = new List<CustomersModel>();
    List<CustomerWorkInfoModel> workinfos = new List<CustomerWorkInfoModel>();
    List<VehicleModel> vehicleList = new List<VehicleModel>();
    List<OrganizationModel> organizations = new List<OrganizationModel>();
    int i = 0;
    private async void DeleteVehicle(Guid id)
    {
        await veh.DeleteVehicle(id);
        await LoadData();
    }

    private async void DeleteWorkProfile(Guid id)
    {
        await custWork.DeleteCustomerWorkInfo(id);
        await LoadData();
    }

    private async Task LoadData()
    {
        customersList = await cust.GetCustomerByID(custCNIC);
        organizations = await org.Getorgs();
        vehicleList = await veh.GetVehicleModelByID(custCNIC);
        workinfos = await custWork.GetCustomerWorkInfoByID(custCNIC);
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    // protected override async Task OnInitializedAsync()
    // {
    //     var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     context = Task.FromResult(authenticationState);
    //     // authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     await LoadData();
    // }
}