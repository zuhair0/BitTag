@page "/custWorkInfo/{custID_FK}/{vehicleID}"
@using BitTagDAL
@using BitTagModels
@using BitTagUser.CutomerServices;
@inject ICustomerWorkInfo custWorkinfo
@inject IOrgs org
@inject IBitTagUsers bittaguser
@inject NavigationManager nm;
@attribute [Authorize(Roles = "Administrator,User")]

@*<EditForm Model="customerWorkInfo" OnSubmit="SaveCustWorkInfo">
    <label>Organization</label>
    @*<input type="text" @bind-value="vehicle.vehicleMake" /><br />*@
    @*<select @onchange="SeletedOrgID">
        @foreach (var item in organizations)
        {
            <option value="@item.orgID">@item.orgName</option>
        }
    </select>
    <label>Work Type</label>
    <input type="text" @bind-value="customerWorkInfo.WorkType" />
    <label>Designtion</label>
    <input type="text" @bind-value="customerWorkInfo.Desig" />
    <label>Work time</label>
    <input type="text" @bind-value="customerWorkInfo.worktime" />
    <button type="submit">Save</button>
</EditForm>*@



<form class="max-w-sm mx-auto" style="padding-top: 120px;">
    <EditForm Model="customerWorkInfo" OnSubmit="SaveCustWorkInfo">
        <div class="grid md:grid-cols-2 md:gap-6">
            <div class="mb-5">
                <label for="orgName" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Organization: *</label>
                <select @onchange="SeletedOrgID" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    @foreach (var item in organizations)
                    {
                        <option value="@item.orgID">@item.orgName</option>
                    }
                </select>
            </div>
            <div class="mb-5">
                <label for="workType" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Work Type: *</label>
                <input type="text" id="workType" @bind-value="customerWorkInfo.WorkType" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Part-Time/Full-Time" required>
            </div>
        </div>
        <div class="grid md:grid-cols-2 md:gap-6">
            <div class="mb-5">
                <label for="desig" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Designation: *</label>
                <input type="text" @bind-value="@customerWorkInfo.Desig" id="desig" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Student" required>
            </div>
            <div class="mb-5">
                <label for="chkinTime" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Check-in Time: *</label>
                <input type="time" id="chkinTime" @bind-value="@customerWorkInfo.worktime" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="" required>
            </div>
        </div>
        <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add Work</button>
    </EditForm>
</form>

@code {
    [Parameter]
    public string custID_FK { get; set; }
    [Parameter]
    public string vehicleID { get; set; }
    CustomerWorkInfoModel customerWorkInfo = new CustomerWorkInfoModel();
    List<CustomerWorkInfoModel> workinfos = new List<CustomerWorkInfoModel>();

    List<OrganizationModel> organizations = new List<OrganizationModel>();
    Guid orgId { get; set; }
    private BitTagUserModel bitTagUser = new BitTagUserModel();
    //string userid = "3fa85f64-5717-4562-b3fc-2c963f66afad";
    //string vehid = "9F2E2662-4924-4C2B-A7B3-EA0EE31E3374";
    //string userid = "3fa85f64-5717-4562-b3fc-2c963f66afad";
    private async void SaveCustWorkInfo()
    {
        customerWorkInfo.userID_FK = Guid.Parse(custID_FK);
        customerWorkInfo.org_FK = orgId;
        bitTagUser.userid_fk = Guid.Parse(custID_FK);
        bitTagUser.vehid_fk = Guid.Parse(vehicleID);
        bitTagUser.bittagcode = "null";
        await bittaguser.SaveBitTagUser(bitTagUser);
        await custWorkinfo.SaveCustomerWorkInfo(customerWorkInfo);
        //nm.NavigateTo("/index/"+custID_FK);
    }
    //private async Task LoadData()
    //{
    //    organizations = await org.Getorgs();
    //}
    private void SeletedOrgID(ChangeEventArgs e)
    {
        orgId = Guid.Parse(e.Value.ToString());
    }
    protected override async Task OnInitializedAsync()
    {

        organizations = await org.Getorgs();
    }
}
