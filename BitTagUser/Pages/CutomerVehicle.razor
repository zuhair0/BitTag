@page "/vehicle/{custID_FK}"
@using BitTagDAL
@using BitTagModels
@using BitTagUser.CutomerServices;
@inject IVehicle veh
@inject NavigationManager nm;
@attribute [Authorize(Roles = "Administrator,User")]
@* <EditForm Model="vehicle" OnSubmit="SaveVehicle">
    <label >Make</label>
    @*<input type="text" @bind-value="vehicle.vehicleMake" /><br />*@
   @* <select @bind="@selected">
        @foreach(var item in make)
        {
            <option value="@item">@item</option>
        }
    </select>

    <label>Model</label>
    <input type="text" @bind-value="vehicle.vehicleModel" /><br />
    <label>Plate</label>
    <input type="text" @bind-value="vehicle.vehiclePlate" /><br />
    <label>type</label>
    <input type="text" @bind-value="vehicle.vehicleType" /><br />
    <label>color</label>
    <input type="text" @bind-value="vehicle.vehicleColor" /><br />
    <button type="submit">Save</button>
</EditForm>

<table class="tble table">
    <thead>
        <tr>
            <th>Make</th>
            <th>Model</th>
            <th>Plate</th>
            <th>Action</th>
        </tr>
    </thead>
    @foreach (var item in vehicleList)
    {
        <tr>
            <td>@item.vehicleMake</td>
            <td>@item.vehicleModel</td>
            <td>@item.vehiclePlate</td>
            <td>
                <button @onclick="(()=>DeleteVehicle(item.vehicleID))">Delete</button>
            </td>
            @*<td>
                <button><a href="vehicle/@item.custID.ToString()">Add Vehicle</a></button>
            </td>
        </tr>
    }
</table> *@
<div class="p-4 sm:ml-64">
    <div class="p-1 rounded-lg main-color" style="width: 100%; height: 95vh">
        <form class="max-w-sm mx-auto">
            <EditForm Model="vehicle" OnSubmit="SaveVehicle">
                <div class="grid md:grid-cols-2 md:gap-6">
                    <div class="mb-5">
                        <label for="vehicleMake" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Vehicle Make: *</label>
                        <select @bind="@selected" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                            @foreach (var item in make)
                            {
                                <option value="@item">@item</option>
                            }
                        </select>
                    </div>
                    <div class="mb-5">
                        <label for="vehicleModel" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Vehicle Model: *</label>
                        <input type="text" id="vehicleModel" @bind-value="@vehicle.vehicleModel" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Mehran" required>
                    </div>
                </div>
                <div class="grid md:grid-cols-2 md:gap-6">
                    <div class="mb-5">
                        <label for="vehiclePlate" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Plate: *</label>
                        <input type="text" @bind-value="@vehicle.vehiclePlate" id="vehiclePlate" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="RX901" required>
                    </div>
                    <div class="mb-5">
                        <label for="vehicleType" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Type: *</label>
                        <input type="text" id="vehicleType" @bind-value="@vehicle.vehicleType" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Automatic/Manual" required>
                    </div>
                </div>
                <div class="grid">
                    <div class="mb-5">
                        <label for="vehicleColor" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Color: *</label>
                        <input type="text" id="vehicleColor" @bind-value="@vehicle.vehicleColor" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="White" required>
                    </div>
                </div>
                <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add Vehicle</button>
            </EditForm>
        </form>
    </div>
</div>


@* @if (vehicle != null)
{
    @foreach (var item in vehicleList)
    {
        <div class="container container-fluid mt-5">
            <div class="card bg-white">
                <article class="card-body mx-auto" style="max-width: 400px;">
                    <h4 class="text-center fw-bold">Vehicle Information</h4>

                    <div class="form-group input-group mb-1 mt-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="oi oi-person"></i> </span>
                        </div>
                        <input class="form-control" @bind-value="item.vehicleMake" readonly>
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="oi oi-person"></i> </span>
                        </div>
                        <input class="form-control" type="text" @bind-value="item.vehicleModel" readonly>
                    </div> <!-- form-group// -->
                    <div class="form-group input-group mb-1">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="oi oi-book"></i> </span>
                        </div>
                        <input class="form-control" @bind-value="item.vehiclePlate" readonly>
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="oi oi-book"></i> </span>
                        </div>
                        <input class="form-control" @bind-value="item.vehicleType" readonly>
                    </div> <!-- form-group// -->
                    <div class="form-group input-group mb-1">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="oi oi-box"></i> </span>
                        </div>
                        <input class="form-control" @bind-value="item.vehicleColor" readonly>
                    </div>
                    
                </article>
            </div> <!-- card.// -->

        </div>
    }

} *@


@code {
    [Parameter]
    public string custID_FK { get; set; }
    VehicleModel vehicle = new VehicleModel();
    List<VehicleModel> vehicleList = new List<VehicleModel>();


    private string? selected{ get; set; }
    List<string> make = new List<string>
    {
        "Suzuki","Honda","Toyota","Hyundai"
    };

    //string userid = "3fa85f64-5717-4562-b3fc-2c963f66afad";
    private async void SaveVehicle()
    {
        Guid id = Guid.NewGuid();
        vehicle.tagID = id;
        vehicle.custID_FK = Guid.Parse(custID_FK);
        vehicle.vehicleID = Guid.NewGuid();
        vehicle.vehicleMake = selected;
        await veh.SaveVehicle(vehicle);
        nm.NavigateTo("/custWorkInfo/"+custID_FK+"/"+vehicle.vehicleID);
    }
    private async Task DeleteVehicle(Guid id)
    {
        await veh.DeleteVehicle(id);
    }
    private async Task LoadData()
    {
        vehicleList = await veh.GetVehicleModels();
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

}
